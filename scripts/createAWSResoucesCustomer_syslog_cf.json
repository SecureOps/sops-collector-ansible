{
    "Description": "Create User and Resources for Secureops Customer logs shipping.",
    "Parameters":  {
        "CustomerName": {
            "Type": "String",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "Description": "Customer Name, only alphanumeric."
        },
        "CustomerS3BucketName": {
            "Type": "String",
            "AllowedPattern": "[a-z][a-z0-9]*",
            "Description": "Customer S3 Bucket Name, only lower case alphanumeric."
        }
    },

    "Resources": {
        "sopsUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": {"Fn::Join": ["-", ["sopsCustomer", {"Ref": "CustomerName"} ] ] },
                "Path": { "Fn::Join": ["", ["/sops/customers/", {"Ref": "CustomerName"}, "/" ] ] },
                "Policies": [ {
                    "PolicyName": {"Fn::Join": ["-", ["sopsCustomerPolicy", {"Ref": "CustomerName"} ] ] },
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "kinesis:DescribeStream",
                                    "kinesis:PutRecord",
                                    "kinesis:PutRecords",
                                    "firehose:PutRecord",
                                    "firehose:PutRecordBatch",
                                    "s3:GetBucketLocation",
                                    "s3:GetObject",
                                    "s3:PutObject",
                                    "s3:ListBucket",
                                    "s3:ListBucketMultipartUploads",
                                    "cloudwatch:PutMetricData"
                                ],
                                "Resource": [
                                    {"Fn::Join": ["", ["arn:aws:kinesis:" , {"Ref": "AWS::Region"},":*:stream/sopsCustomerLogs-", {"Ref": "CustomerName"}, "-*" ] ] },
                                    {"Fn::Join": ["", ["arn:aws:firehose:", {"Ref": "AWS::Region"},":*:deliverystream/sopsCustomerLogs-", {"Ref": "CustomerName"}, "-*" ] ] },
                                    {"Fn::Join": ["", ["arn:aws:s3:::", {"Fn::Join": ["-", ["sopscustomer",  {"Ref":"CustomerS3BucketName"} ] ] } ] ] },
                                    {"Fn::Join": ["", ["arn:aws:s3:::", {"Fn::Join": ["-", ["sopscustomer",  {"Ref":"CustomerS3BucketName"} ] ] }, "*" ] ] }
                                ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:PutMetricData"
                                    ],
                                "Resource": "*"
                            }
                        ]
                    }
                } ]
            }
        },

        "sopsUserKey": {
            "Type": "AWS::IAM::AccessKey",
            "DependsOn": "sopsUser",
            "Properties": {
                "Serial": 0,
                "Status": "Active",
                "UserName": {"Fn::Join": ["-", ["sopsCustomer", {"Ref": "CustomerName"} ] ] }
            }
        },

        "sopsUserRO": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": {"Fn::Join": ["-", ["sopsCustomerRO", {"Ref": "CustomerName"} ] ] },
                "Path": { "Fn::Join": ["", ["/sops/customers/", {"Ref": "CustomerName"}, "/" ] ] },
                "Policies": [ {
                    "PolicyName": {"Fn::Join": ["-", ["sopsCustomerROPolicy", {"Ref": "CustomerName"} ] ] },
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "dynamodb:CreateTable",
                                    "dynamodb:PutItem",
                                    "dynamodb:DescribeTable",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:UpdateItem",
                                    "kinesis:ListShards",
                                    "kinesis:GetShardIterator",
                                    "kinesis:ListTagsForStream",
                                    "kinesis:DescribeStream",
                                    "kinesis:GetRecords",
                                    "s3:GetBucketLocation",
                                    "s3:GetObject",
                                    "s3:ListBucket",
                                    "s3:ListBucketMultipartUploads"
                                ],
                                "Resource": [
                                    {"Fn::Join": ["", ["arn:aws:kinesis:" , {"Ref": "AWS::Region"},":*:stream/sopsCustomerLogs-", {"Ref": "CustomerName"}, "-*" ] ] },
                                    {"Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"},":*:table/", {"Fn::Join": ["-", ["sopscustomer",  {"Ref":"CustomerName"} ] ] }, "*" ] ] },
                                    {"Fn::Join": ["", ["arn:aws:s3:::", {"Fn::Join": ["-", ["sopscustomer",  {"Ref":"CustomerS3BucketName"} ] ] } ] ] },
                                    {"Fn::Join": ["", ["arn:aws:s3:::", {"Fn::Join": ["-", ["sopscustomer",  {"Ref":"CustomerS3BucketName"} ] ] }, "*" ] ] }
                                 ]
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:PutMetricData"
                                    ],
                                "Resource": "*"
                            }
                        ]
                    }
                } ]
            }
        },

        "sopsUserROKey": {
            "Type": "AWS::IAM::AccessKey",
            "DependsOn": "sopsUserRO",
            "Properties": {
                "Serial": 0,
                "Status": "Active",
                "UserName": {"Fn::Join": ["-", ["sopsCustomerRO", {"Ref": "CustomerName"} ] ] }
            }
        },

        "sopsCustomerKinesisStreamSyslog": {
            "Type": "AWS::Kinesis::Stream",
            "DependsOn": "sopsUser",
            "Properties": {
                "Name" : {"Fn::Join": ["-", ["sopsCustomerLogs", {"Ref": "CustomerName"}, {"Ref": "AWS::Region"}, "syslog" ] ] },
                "RetentionPeriodHours" : 24,
                "ShardCount" : 1,
                "Tags" : [
                    {"Key":"CustomerName", "Value":  {"Ref": "CustomerName"}},
                    {"Key":"StreamType", "Value": "syslog"}
                ]
            }
        },

        "sopsCustomerKinesisDeliverystreamSyslog": {
            "DependsOn": ["deliveryPolicy"],
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": {"Fn::Join": ["-", ["sopsCustomerDeliveryStream", {"Ref": "CustomerName"}, "syslog" ] ] },
                "DeliveryStreamType": "KinesisStreamAsSource",
                "KinesisStreamSourceConfiguration": {
                    "KinesisStreamARN": {"Fn::GetAtt": ["sopsCustomerKinesisStreamSyslog", "Arn"]},
                    "RoleARN": {"Fn::GetAtt" : ["deliveryRole", "Arn"] }
                },
                "ExtendedS3DestinationConfiguration": {
                    "BucketARN": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref":"s3bucket"} ] ] },
                    "BufferingHints": {
                        "IntervalInSeconds": "60",
                        "SizeInMBs": "50"
                    },
                    "CompressionFormat": "GZIP",
                    "Prefix": "logs/syslog",
                    "RoleARN": {"Fn::GetAtt" : ["deliveryRole", "Arn"] }
                }
            }
        },
        "sopsCustomerKinesisStreamBeats": {
            "Type": "AWS::Kinesis::Stream",
            "DependsOn": "sopsUser",
            "Properties": {
                "Name" : {"Fn::Join": ["-", ["sopsCustomerLogs", {"Ref": "CustomerName"}, {"Ref": "AWS::Region"}, "beats" ] ] },
                "RetentionPeriodHours" : 24,
                "ShardCount" : 1,
                "Tags" : [
                    {"Key":"CustomerName", "Value":  {"Ref": "CustomerName"}},
                    {"Key":"StreamType", "Value": "beats"}
                ]
            }
        },

        "sopsCustomerKinesisDeliverystreamBeats": {
            "DependsOn": ["deliveryPolicy"],
            "Type": "AWS::KinesisFirehose::DeliveryStream",
            "Properties": {
                "DeliveryStreamName": {"Fn::Join": ["-", ["sopsCustomerDeliveryStream", {"Ref": "CustomerName"}, "beats" ] ] },
                "DeliveryStreamType": "KinesisStreamAsSource",
                "KinesisStreamSourceConfiguration": {
                    "KinesisStreamARN": {"Fn::GetAtt": ["sopsCustomerKinesisStreamSyslog", "Arn"]},
                    "RoleARN": {"Fn::GetAtt" : ["deliveryRole", "Arn"] }
                },
                "ExtendedS3DestinationConfiguration": {
                    "BucketARN": {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref":"s3bucket"} ] ] },
                    "BufferingHints": {
                        "IntervalInSeconds": "60",
                        "SizeInMBs": "50"
                    },
                    "CompressionFormat": "GZIP",
                    "Prefix": "logs/beats",
                    "RoleARN": {"Fn::GetAtt" : ["deliveryRole", "Arn"] }
                }
            }
        },

        "s3bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
              "BucketName":  {"Fn::Join": ["-", ["sopscustomer",  {"Ref":"CustomerS3BucketName"} ] ] },
              "VersioningConfiguration": { "Status": "Enabled" }
            }
        },

        "deliveryRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Join": ["-", ["sopsCustomerRole", {"Ref": "CustomerName"} ] ] },
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "firehose.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {
                            "StringEquals": {"sts:ExternalId": {"Ref":"AWS::AccountId"} }
                        }
                    } ]
                }
            }
        },

        "deliveryPolicy": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": ["sopsUser", "s3bucket"],
            "Properties": {
                "PolicyName": {"Fn::Join": ["-", ["sopsCustomerDeliveryPolicy", {"Ref": "CustomerName"} ] ] },
                "Roles": [{"Ref": "deliveryRole"}],
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:GetBucketLocation",
                            "s3:GetObject",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutObject",
                            "kinesis:DescribeStream",
                            "kinesis:GetShardIterator",
                            "kinesis:GetRecords",
                            "kinesis:DescribeStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": [
                            {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref":"s3bucket"} ] ] },
                            {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref":"s3bucket"}, "*" ] ] },
                            {"Fn::Join": ["", ["arn:aws:kinesis:" , {"Ref": "AWS::Region"},":*:stream/sopsCustomerLogs-", {"Ref": "CustomerName"}, "-*" ] ] },
                            {"Fn::Join": ["", ["arn:aws:firehose:", {"Ref": "AWS::Region"},":*:deliverystream/sopsCustomerLogs-", {"Ref": "CustomerName"}, "-*" ] ] }
                        ]
                    } ]
                }
            }
        }

    },

    "Outputs": {
        "CustomerKeyId": {
            "Value": {"Ref": "sopsUserKey"}
        },
        "CustomerKey": {
            "Value": {"Fn::GetAtt" : ["sopsUserKey", "SecretAccessKey"] }
        },

        "CustomerROKeyId": {
            "Value": {"Ref": "sopsUserROKey"}
        },
        "CustomerROKey": {
            "Value": {"Fn::GetAtt" : ["sopsUserROKey", "SecretAccessKey"] }
        }
    }
}
